What could go wrong when we write JS code?

Security details in our code
- our JS code is part of what the browser downloads
  and runs on it. all our code runs on the machine
  of our page visitors
- our JS code can be read by ANYONE
- security-relevant details can be read
- example: database access credentials exposed in code

Cross-site scripting attacks (XSS)
- the most dangerous attack pattern against client-side JS
  applications
- attack pattern where malicious JS code gets injected + executed
- injected code can do ANYTHING our code could do as well
- very dangerous: full behind-the-scenes control for attacker
- example: unchecked user-generated content
- modern browsers have a security feature where they do not
  execute <script> tags which are output by innerHTML

Third-party libraries and XSS
- any third-party code we add to our project is also executed
- when adding third-party libraries, we have to make sure that
  it's from people we trust, and that they secure their code
  properly

Cross-site request forgery (CSRF)
- attack pattern that depends on injected content (e.g. image)
- requests to malicious servers are made with user's cookies
- actions can be executed without the user knowing
- example: malicious image URLs, XSS
- more of a server-side issue

Cross-origin resource sharing (CORS)